# CLINIC
survdiff(surv_object ~ addicts$clinic)
plot(survfit(Surv(time, status) ~ clinic, data = addicts), lty = c(2,1), ylab = "Probability", xlab = "Survival Time [days]", xlim= c(0, max(addicts$time) * 1.05))
legend("bottomleft", c("Clinic 1", "Clinic 2"), lty = c(2,1), bty = "n")
# DOSE !
survdiff(Surv(time = addicts$time, event = addicts$status) ~ addicts$dose_group)
plot(survfit(Surv(time, status) ~ dose_group, data = addicts), lty = c(1,2,3), ylab = "Probability", xlab = "Survival Time [days]", xlim= c(0, max(addicts$time) * 1.05))
legend("bottomleft", c("low dose", "middle dose", "high dose"), lty = c(1,2,3), bty = "n")
# PRISON
survdiff(Surv(time = addicts$time, event = addicts$status) ~ addicts$prison)
plot(survfit(Surv(time, status) ~ prison, data = addicts), lty = c(2,1), ylab = "Probability", xlab = "Survival Time [days]", xlim= c(0, max(addicts$time) * 1.05))
legend("bottomleft", c("No prison record", "Prison record"), lty = c(2,1), bty = "n")
# C1:PRISON
survdiff(Surv(time = addicts_c1$time, event = addicts_c1$status) ~ addicts_c1$prison)
plot(survfit(Surv(time, status) ~ prison, data = addicts_c1), lty = c(2,1), ylab = "Probability", xlab = "Survival Time [days]",  xlim= c(0, max(addicts_c1$time) * 1.05))
legend("bottomleft", c("C1 - No prison record", "C1 - Prison record"), lty = c(2,1), bty = "n")
# C2:PRISON
survdiff(Surv(time = addicts_c2$time, event = addicts_c2$status) ~ addicts_c2$prison)
plot(survfit(Surv(time, status) ~ prison, data = addicts_c2), lty = c(2,1), ylab = "Probability", xlab = "Survival Time [days]", xlim= c(0, max(addicts_c2$time) * 1.05))
legend("bottomleft", c("C2 - No prison record", "C2 - Prison record"), lty = c(2,1), bty = "n")
# C1:DOSE
survdiff(Surv(time = addicts_c1$time, event = addicts_c1$status) ~ addicts_c1$dose_group)
plot(survfit(Surv(time, status) ~ dose_group, data = addicts_c1), lty = c(1,2,3), ylab = "Probability", xlab = "Survival Time [days]", xlim= c(0, max(addicts_c1$time) * 1.05))
legend("bottomleft", c("low dose", "middle dose", "high dose"), lty = c(1,2,3), bty = "n")
# C2:DOSE
survdiff(Surv(time = addicts_c2$time, event = addicts_c2$status) ~ addicts_c2$dose_group)
plot(survfit(Surv(time, status) ~ dose_group, data = addicts_c2), lty = c(1,2,3), ylab = "Probability", xlab = "Survival Time [days]", xlim= c(0, max(addicts_c1$time) * 1.05))
legend("bottomleft", c("low dose", "middle dose", "high dose"), lty = c(1,2,3), bty = "n")
# Clinic, une autre facon davoir ce plot
KM_clinic <- survfit(surv_object ~ clinic, data = addicts)
summary(KM_clinic)
ggsurvplot(KM_clinic, data = addicts, pval = TRUE, strata = "Clinic")
#addicts$dose_level <- cut(addicts$dose, c(0, 69, 120), labels=c("low_middle", "high"))
fit.coxph <- coxph(surv_object ~ clinic + prison + dose_group, data = addicts)
test.ph <- cox.zph(fit.coxph)
ggcoxzph(test.ph)
ggforest(fit.coxph, data = addicts)
hist(addicts$dose, xlab="dose per day [mg]", ylab = "nb. of patients", breaks = 20)
hist(addicts_nocens$time, xlab="Treatment time  [days]", ylab = "nb. of patients")
hist(addicts_cens$time, xlab="Censored treatment time  [days]", ylab = "nb. of patients")
#Boxplots, no censoring
boxplot(data = addicts, time ~ clinic, xlab = "Clinic ID number", ylab= "Treatment time [days]")
boxplot(data = addicts, time ~ prison, xlab = "Prison background", ylab= "Treatment time [days]", names= c("no", "yes"))
boxplot(data = addicts, time ~ dose_group, xlab = "Dose per day", ylab= "Treatment time [days]", names= c("<50 mg", " 50-69 mg", ">=70 mg"))
quantile(addicts$dose)
boxplot(addicts$dose)
chisq.test(table(addicts$time, addicts$status))
chisq.test(table(addicts$time, addicts$id))
#addicts$dose_level <- cut(addicts$dose, c(0, 69, 120), labels=c("low_middle", "high"))
fit.coxph <- coxph(surv_object ~ clinic + prison + dose_group, data = addicts)
test.ph <- cox.zph(fit.coxph)
ggcoxzph(test.ph)
ggforest(fit.coxph, data = addicts)
View(bxpecho)
View(bxpseeding)
View(clouds)
View(fit.coxph)
View(hmod)
View(fit1)
View(KM_clinic)
install.packages("survminer")
install.packages("survminer")
library(survival)
library(survminer)
library(dplyr)
library(dplyr)
addicts <- data_addicts
library(readxl)
data_addicts <- read_excel("Documents/Etudes/Biostat/Projet2/data_addicts.xlsx")
View(data_addicts)
addicts <- data_addicts
names(addicts) <- c("id", "clinic", "status", "time","prison", "dose")
addicts <- rbind(addicts, c(1,1, 1,  428, 0,  50))
addicts$dose_group <- cut(addicts$dose, c(0, 50, 69, 120), labels=c("low", "middle", "high"))
addicts_c1 <- subset(addicts, clinic == 1 )
addicts_c2 <- subset(addicts, clinic == 2 )
addicts_nocens <- subset(addicts, status == 1 )
addicts_cens <- subset(addicts, status == 0 )
addicts_prison <- subset(addicts, prison == 1 )
addicts_noprison <- subset(addicts, prison == 0 )
# Fit survival data using the Kaplan-Meier method
surv_object <- Surv(time = addicts$time, event = addicts$status)
# CLINIC
survdiff(surv_object ~ addicts$clinic)
plot(survfit(Surv(time, status) ~ clinic, data = addicts), lty = c(2,1), ylab = "Probability", xlab = "Survival Time [days]", xlim= c(0, max(addicts$time) * 1.05))
legend("bottomleft", c("Clinic 1", "Clinic 2"), lty = c(2,1), bty = "n")
# DOSE !
survdiff(Surv(time = addicts$time, event = addicts$status) ~ addicts$dose_group)
plot(survfit(Surv(time, status) ~ dose_group, data = addicts), lty = c(1,2,3), ylab = "Probability", xlab = "Survival Time [days]", xlim= c(0, max(addicts$time) * 1.05))
legend("bottomleft", c("low dose", "middle dose", "high dose"), lty = c(1,2,3), bty = "n")
# PRISON
survdiff(Surv(time = addicts$time, event = addicts$status) ~ addicts$prison)
plot(survfit(Surv(time, status) ~ prison, data = addicts), lty = c(2,1), ylab = "Probability", xlab = "Survival Time [days]", xlim= c(0, max(addicts$time) * 1.05))
legend("bottomleft", c("No prison record", "Prison record"), lty = c(2,1), bty = "n")
# C1:PRISON
survdiff(Surv(time = addicts_c1$time, event = addicts_c1$status) ~ addicts_c1$prison)
plot(survfit(Surv(time, status) ~ prison, data = addicts_c1), lty = c(2,1), ylab = "Probability", xlab = "Survival Time [days]",  xlim= c(0, max(addicts_c1$time) * 1.05))
legend("bottomleft", c("C1 - No prison record", "C1 - Prison record"), lty = c(2,1), bty = "n")
# C2:PRISON
survdiff(Surv(time = addicts_c2$time, event = addicts_c2$status) ~ addicts_c2$prison)
plot(survfit(Surv(time, status) ~ prison, data = addicts_c2), lty = c(2,1), ylab = "Probability", xlab = "Survival Time [days]", xlim= c(0, max(addicts_c2$time) * 1.05))
legend("bottomleft", c("C2 - No prison record", "C2 - Prison record"), lty = c(2,1), bty = "n")
# C1:DOSE
survdiff(Surv(time = addicts_c1$time, event = addicts_c1$status) ~ addicts_c1$dose_group)
plot(survfit(Surv(time, status) ~ dose_group, data = addicts_c1), lty = c(1,2,3), ylab = "Probability", xlab = "Survival Time [days]", xlim= c(0, max(addicts_c1$time) * 1.05))
legend("bottomleft", c("low dose", "middle dose", "high dose"), lty = c(1,2,3), bty = "n")
# C2:DOSE
survdiff(Surv(time = addicts_c2$time, event = addicts_c2$status) ~ addicts_c2$dose_group)
plot(survfit(Surv(time, status) ~ dose_group, data = addicts_c2), lty = c(1,2,3), ylab = "Probability", xlab = "Survival Time [days]", xlim= c(0, max(addicts_c1$time) * 1.05))
legend("bottomleft", c("low dose", "middle dose", "high dose"), lty = c(1,2,3), bty = "n")
# Clinic, une autre facon davoir ce plot
KM_clinic <- survfit(surv_object ~ clinic, data = addicts)
summary(KM_clinic)
ggsurvplot(KM_clinic, data = addicts, pval = TRUE, strata = "Clinic")
#addicts$dose_level <- cut(addicts$dose, c(0, 69, 120), labels=c("low_middle", "high"))
fit.coxph <- coxph(surv_object ~ clinic + prison + dose_group, data = addicts)
test.ph <- cox.zph(fit.coxph)
ggcoxzph(test.ph)
ggforest(fit.coxph, data = addicts)
# CLINIC
survdiff(surv_object ~ addicts$clinic)
plot(survfit(Surv(time, status) ~ clinic, data = addicts), lty = c(2,1), ylab = "Probability", xlab = "Survival Time [days]", xlim= c(0, max(addicts$time) * 1.05))
legend("bottomleft", c("Clinic 1", "Clinic 2"), lty = c(2,1), bty = "n")
# DOSE !
survdiff(Surv(time = addicts$time, event = addicts$status) ~ addicts$dose_group)
plot(survfit(Surv(time, status) ~ dose_group, data = addicts), lty = c(1,2,3), ylab = "Probability", xlab = "Survival Time [days]", xlim= c(0, max(addicts$time) * 1.05))
legend("bottomleft", c("low dose", "middle dose", "high dose"), lty = c(1,2,3), bty = "n")
# PRISON
survdiff(Surv(time = addicts$time, event = addicts$status) ~ addicts$prison)
plot(survfit(Surv(time, status) ~ prison, data = addicts), lty = c(2,1), ylab = "Probability", xlab = "Survival Time [days]", xlim= c(0, max(addicts$time) * 1.05))
legend("bottomleft", c("No prison record", "Prison record"), lty = c(2,1), bty = "n")
# C1:PRISON
survdiff(Surv(time = addicts_c1$time, event = addicts_c1$status) ~ addicts_c1$prison)
plot(survfit(Surv(time, status) ~ prison, data = addicts_c1), lty = c(2,1), ylab = "Probability", xlab = "Survival Time [days]",  xlim= c(0, max(addicts_c1$time) * 1.05))
legend("bottomleft", c("C1 - No prison record", "C1 - Prison record"), lty = c(2,1), bty = "n")
# C2:PRISON
survdiff(Surv(time = addicts_c2$time, event = addicts_c2$status) ~ addicts_c2$prison)
plot(survfit(Surv(time, status) ~ prison, data = addicts_c2), lty = c(2,1), ylab = "Probability", xlab = "Survival Time [days]", xlim= c(0, max(addicts_c2$time) * 1.05))
legend("bottomleft", c("C2 - No prison record", "C2 - Prison record"), lty = c(2,1), bty = "n")
# C1:DOSE
survdiff(Surv(time = addicts_c1$time, event = addicts_c1$status) ~ addicts_c1$dose_group)
plot(survfit(Surv(time, status) ~ dose_group, data = addicts_c1), lty = c(1,2,3), ylab = "Probability", xlab = "Survival Time [days]", xlim= c(0, max(addicts_c1$time) * 1.05))
legend("bottomleft", c("low dose", "middle dose", "high dose"), lty = c(1,2,3), bty = "n")
# C2:DOSE
survdiff(Surv(time = addicts_c2$time, event = addicts_c2$status) ~ addicts_c2$dose_group)
#addicts$dose_level <- cut(addicts$dose, c(0, 69, 120), labels=c("low_middle", "high"))
fit.coxph <- coxph(surv_object ~ clinic + prison + dose_group, data = addicts)
View(fit.coxph)
summary(fit.coxph)
addicts_c1 <- subset(addicts, clinic == 1 )
addicts_c2 <- subset(addicts, clinic == 2 )
addicts_nocens <- subset(addicts, status == 1 )
addicts_cens <- subset(addicts, status == 0 )
addicts_prison <- subset(addicts, prison == 1 )
addicts_noprison <- subset(addicts, prison == 0 )
# Fit survival data using the Kaplan-Meier method
surv_object <- Surv(time = addicts$time, event = addicts$status)
# CLINIC
survdiff(surv_object ~ addicts$clinic)
plot(survfit(Surv(time, status) ~ clinic, data = addicts), lty = c(2,1), ylab = "Probability", xlab = "Survival Time [days]", xlim= c(0, max(addicts$time) * 1.05))
legend("bottomleft", c("Clinic 1", "Clinic 2"), lty = c(2,1), bty = "n")
R.version.string
library(RSMLM)
install.packages("RSMLM")
R.version.string
ID <- '1'
data <- read.csv(paste('simulated_SMLM_', ID, '.csv', sep = ""))
# search radius
tomatoR <- 31 # Selon juliette, mettre plutot un peu plus que 30 (triche)
library(RSMLM)
setwd('/Users/Eliana/Documents/PDM/Codes/My_codes/Data')
ID <- '1'
data <- read.csv(paste('simulated_SMLM_', ID, '.csv', sep = ""))
detectionList <- data
coords <- as.matrix(detectionList[, c('x', 'y')])
# cluster data using ToMATo
labels <- clusterTomato(coords, tomatoR, tomatoThresh)
# persistence threshold
tomatoThresh <- 6
detectionList <- data
coords <- as.matrix(detectionList[, c('x', 'y')])
# cluster data using ToMATo
labels <- clusterTomato(coords, tomatoR, tomatoThresh)
# Tomato result
plotClusterScatter(coords, labels)
# GT
plotClusterScatter(coords, detectionList$labels_1)
numClustersTom <- sum(unique(labels) > 0)
numClustersGT <- sum(unique(detectionList$labels_1) > 0)
print(paste('ToMATo found', numClustersTom, 'clusters in the dataset. The ground truth number is', numClustersGT))
tomatoDiag <- tomatoDiagram(coords, tomatoR)
plotTomatoDiagram(tomatoDiag, tomatoThresh)
filename <- paste("tomato_result_", ID, ".csv", sep = "")
write.csv(labels, filename)
# persistence threshold
tomatoThresh <- 10
detectionList <- data
coords <- as.matrix(detectionList[, c('x', 'y')])
# cluster data using ToMATo
labels <- clusterTomato(coords, tomatoR, tomatoThresh)
# Tomato result
plotClusterScatter(coords, labels)
# GT
plotClusterScatter(coords, detectionList$labels_1)
numClustersTom <- sum(unique(labels) > 0)
numClustersGT <- sum(unique(detectionList$labels_1) > 0)
print(paste('ToMATo found', numClustersTom, 'clusters in the dataset. The ground truth number is', numClustersGT))
tomatoDiag <- tomatoDiagram(coords, tomatoR)
plotTomatoDiagram(tomatoDiag, tomatoThresh)
filename <- paste("tomato_result_", ID, ".csv", sep = "")
write.csv(labels, filename)
# persistence threshold
tomatoThresh <- 6
detectionList <- data
coords <- as.matrix(detectionList[, c('x', 'y')])
# cluster data using ToMATo
labels <- clusterTomato(coords, tomatoR, tomatoThresh)
# Tomato result
plotClusterScatter(coords, labels)
# GT
plotClusterScatter(coords, detectionList$labels_1)
numClustersTom <- sum(unique(labels) > 0)
numClustersGT <- sum(unique(detectionList$labels_1) > 0)
print(paste('ToMATo found', numClustersTom, 'clusters in the dataset. The ground truth number is', numClustersGT))
tomatoDiag <- tomatoDiagram(coords, tomatoR)
plotTomatoDiagram(tomatoDiag, tomatoThresh)
filename <- paste("tomato_result_", ID, ".csv", sep = "")
write.csv(labels, filename)
library(RSMLM)
setwd('/Users/Eliana/Documents/PDM/Codes/My_codes/Data')
ID <- '2'
data <- read.csv(paste('simulated_SMLM_', ID, '.csv', sep = ""))
# search radius
tomatoR <- 31 # Selon juliette, mettre plutot un peu plus que 30 (triche)
# persistence threshold
tomatoThresh <- 6
detectionList <- data
coords <- as.matrix(detectionList[, c('x', 'y')])
# cluster data using ToMATo
labels <- clusterTomato(coords, tomatoR, tomatoThresh)
# Tomato result
plotClusterScatter(coords, labels)
# GT
plotClusterScatter(coords, detectionList$labels_1)
numClustersTom <- sum(unique(labels) > 0)
numClustersGT <- sum(unique(detectionList$labels_1) > 0)
print(paste('ToMATo found', numClustersTom, 'clusters in the dataset. The ground truth number is', numClustersGT))
tomatoDiag <- tomatoDiagram(coords, tomatoR)
plotTomatoDiagram(tomatoDiag, tomatoThresh)
filename <- paste("tomato_result_", ID, ".csv", sep = "")
write.csv(labels, filename)
ID <- '3'
data <- read.csv(paste('simulated_SMLM_', ID, '.csv', sep = ""))
# search radius
tomatoR <- 31 # Selon juliette, mettre plutot un peu plus que 30 (triche)
# persistence threshold
tomatoThresh <- 6
detectionList <- data
coords <- as.matrix(detectionList[, c('x', 'y')])
# cluster data using ToMATo
labels <- clusterTomato(coords, tomatoR, tomatoThresh)
# Tomato result
plotClusterScatter(coords, labels)
# GT
plotClusterScatter(coords, detectionList$labels_1)
numClustersTom <- sum(unique(labels) > 0)
numClustersGT <- sum(unique(detectionList$labels_1) > 0)
print(paste('ToMATo found', numClustersTom, 'clusters in the dataset. The ground truth number is', numClustersGT))
tomatoDiag <- tomatoDiagram(coords, tomatoR)
plotTomatoDiagram(tomatoDiag, tomatoThresh)
filename <- paste("tomato_result_", ID, ".csv", sep = "")
write.csv(labels, filename)
ID <- '4'
data <- read.csv(paste('simulated_SMLM_', ID, '.csv', sep = ""))
# search radius
tomatoR <- 31 # Selon juliette, mettre plutot un peu plus que 30 (triche)
# persistence threshold
tomatoThresh <- 6
detectionList <- data
coords <- as.matrix(detectionList[, c('x', 'y')])
# cluster data using ToMATo
labels <- clusterTomato(coords, tomatoR, tomatoThresh)
# Tomato result
plotClusterScatter(coords, labels)
# GT
plotClusterScatter(coords, detectionList$labels_1)
numClustersTom <- sum(unique(labels) > 0)
numClustersGT <- sum(unique(detectionList$labels_1) > 0)
print(paste('ToMATo found', numClustersTom, 'clusters in the dataset. The ground truth number is', numClustersGT))
tomatoDiag <- tomatoDiagram(coords, tomatoR)
plotTomatoDiagram(tomatoDiag, tomatoThresh)
filename <- paste("tomato_result_", ID, ".csv", sep = "")
write.csv(labels, filename)
library(RSMLM)
setwd('/Users/Eliana/Documents/PDM/Codes/My_codes/Data')
folder_name <- '/standard/'
ID <- '1'
# search radius
tomatoR <- 31 # Selon juliette, mettre plutot un peu plus que 30 (triche)
# persistence threshold
tomatoThresh <- 6
for (i in 0:29) {
data <- read.csv(paste(folder_name, 'simulated_SMLM_', ID, '.csv', sep = ""))
detectionList <- data
#data.xy <- subset(data, select=c("V1", "V2"))
coords <- as.matrix(detectionList[, c('x', 'y')])
# cluster data using ToMATo
labels <- clusterTomato(coords, tomatoR, tomatoThresh)
#write.csv(labels, paste("tomato", name, ".csv", sep=""))
# Tomato result
plotClusterScatter(coords, labels)
# GT
plotClusterScatter(coords, detectionList$labels_1)
numClustersTom <- sum(unique(labels) > 0)
numClustersGT <- sum(unique(detectionList$labels_1) > 0)
print(paste('ToMATo found', numClustersTom, 'clusters in the dataset. The ground truth number is', numClustersGT))
tomatoDiag <- tomatoDiagram(coords, tomatoR)
plotTomatoDiagram(tomatoDiag, tomatoThresh)
filename <- paste("tomato_results/tomato_result_", ID, "_", i , ".csv", sep = "")
write.csv(labels, filename)
}
library(RSMLM)
setwd('/Users/Eliana/Documents/PDM/Codes/My_codes/Data')
folder_name <- '/standard/'
ID <- '1'
# search radius
tomatoR <- 31 # Selon juliette, mettre plutot un peu plus que 30 (triche)
# persistence threshold
tomatoThresh <- 6
for (i in 0:29) {
data <- read.csv(paste(folder_name, 'simulated_SMLM_', ID, '_', i, '.csv', sep = ""))
detectionList <- data
#data.xy <- subset(data, select=c("V1", "V2"))
coords <- as.matrix(detectionList[, c('x', 'y')])
# cluster data using ToMATo
labels <- clusterTomato(coords, tomatoR, tomatoThresh)
#write.csv(labels, paste("tomato", name, ".csv", sep=""))
# Tomato result
plotClusterScatter(coords, labels)
# GT
plotClusterScatter(coords, detectionList$labels_1)
numClustersTom <- sum(unique(labels) > 0)
numClustersGT <- sum(unique(detectionList$labels_1) > 0)
print(paste('ToMATo found', numClustersTom, 'clusters in the dataset. The ground truth number is', numClustersGT))
tomatoDiag <- tomatoDiagram(coords, tomatoR)
plotTomatoDiagram(tomatoDiag, tomatoThresh)
filename <- paste("tomato_results/tomato_result_", ID, "_", i , ".csv", sep = "")
write.csv(labels, filename)
}
help("read_csv")
help("read.csv")
library(RSMLM)
setwd('/Users/Eliana/Documents/PDM/Codes/My_codes/Data')
folder_name <- 'standard/'
ID <- '1'
# search radius
tomatoR <- 31 # Selon juliette, mettre plutot un peu plus que 30 (triche)
# persistence threshold
tomatoThresh <- 6
for (i in 0:29) {
data <- read.csv(paste(folder_name, 'simulated_SMLM_', ID, '_', i, '.csv', sep = ""))
detectionList <- data
#data.xy <- subset(data, select=c("V1", "V2"))
coords <- as.matrix(detectionList[, c('x', 'y')])
# cluster data using ToMATo
labels <- clusterTomato(coords, tomatoR, tomatoThresh)
#write.csv(labels, paste("tomato", name, ".csv", sep=""))
# Tomato result
plotClusterScatter(coords, labels)
# GT
plotClusterScatter(coords, detectionList$labels_1)
numClustersTom <- sum(unique(labels) > 0)
numClustersGT <- sum(unique(detectionList$labels_1) > 0)
print(paste('ToMATo found', numClustersTom, 'clusters in the dataset. The ground truth number is', numClustersGT))
tomatoDiag <- tomatoDiagram(coords, tomatoR)
plotTomatoDiagram(tomatoDiag, tomatoThresh)
filename <- paste("tomato_results/tomato_result_", ID, "_", i , ".csv", sep = "")
write.csv(labels, filename)
}
library(RSMLM)
setwd('/Users/Eliana/Documents/PDM/Codes/My_codes/Data')
folder_name <- 'low_density/'
ID <- '2'
# search radius
tomatoR <- 31 # Selon juliette, mettre plutot un peu plus que 30 (triche)
# persistence threshold
tomatoThresh <- 6
data <- read.csv(paste(folder_name, 'simulated_SMLM_', ID, '_', '1', '.csv', sep = ""))
detectionList <- data
coords <- as.matrix(detectionList[, c('x', 'y')])
# cluster data using ToMATo
labels <- clusterTomato(coords, tomatoR, tomatoThresh)
# Tomato result
plotClusterScatter(coords, labels)
# GT
plotClusterScatter(coords, detectionList$labels_1)
numClustersTom <- sum(unique(labels) > 0)
numClustersGT <- sum(unique(detectionList$labels_1) > 0)
print(paste('ToMATo found', numClustersTom, 'clusters in the dataset. The ground truth number is', numClustersGT))
tomatoDiag <- tomatoDiagram(coords, tomatoR)
plotTomatoDiagram(tomatoDiag, tomatoThresh)
filename <- paste("tomato_results/tomato_result_", ID, "_", i , ".csv", sep = "")
library(RSMLM)
setwd('/Users/Eliana/Documents/PDM/Codes/My_codes/Data')
folder_name <- 'low_density/'
ID <- '2'
# search radius
tomatoR <- 31 # Selon juliette, mettre plutot un peu plus que 30 (triche)
# persistence threshold
tomatoThresh <- 6
for (i in 0:29) {
data <- read.csv(paste(folder_name, 'simulated_SMLM_', ID, '_', i, '.csv', sep = ""))
detectionList <- data
#data.xy <- subset(data, select=c("V1", "V2"))
coords <- as.matrix(detectionList[, c('x', 'y')])
# cluster data using ToMATo
labels <- clusterTomato(coords, tomatoR, tomatoThresh)
#write.csv(labels, paste("tomato", name, ".csv", sep=""))
# Tomato result
plotClusterScatter(coords, labels)
# GT
plotClusterScatter(coords, detectionList$labels_1)
numClustersTom <- sum(unique(labels) > 0)
numClustersGT <- sum(unique(detectionList$labels_1) > 0)
print(paste('ToMATo found', numClustersTom, 'clusters in the dataset. The ground truth number is', numClustersGT))
tomatoDiag <- tomatoDiagram(coords, tomatoR)
plotTomatoDiagram(tomatoDiag, tomatoThresh)
filename <- paste("tomato_results/tomato_result_", ID, "_", i , ".csv", sep = "")
write.csv(labels, filename)
}
library(RSMLM)
setwd('/Users/Eliana/Documents/PDM/Codes/My_codes/Data')
folder_name <- 'high_noise/'
ID <- '3'
# search radius
tomatoR <- 31 # Selon juliette, mettre plutot un peu plus que 30 (triche)
# persistence threshold
tomatoThresh <- 6
data <- read.csv(paste(folder_name, 'simulated_SMLM_', ID, '_', i, '.csv', sep = ""))
detectionList <- data
coords <- as.matrix(detectionList[, c('x', 'y')])
# cluster data using ToMATo
labels <- clusterTomato(coords, tomatoR, tomatoThresh)
# Tomato result
plotClusterScatter(coords, labels)
# GT
plotClusterScatter(coords, detectionList$labels_1)
numClustersTom <- sum(unique(labels) > 0)
numClustersGT <- sum(unique(detectionList$labels_1) > 0)
print(paste('ToMATo found', numClustersTom, 'clusters in the dataset. The ground truth number is', numClustersGT))
tomatoDiag <- tomatoDiagram(coords, tomatoR)
plotTomatoDiagram(tomatoDiag, tomatoThresh)
library(RSMLM)
setwd('/Users/Eliana/Documents/PDM/Codes/My_codes/Data')
folder_name <- 'high_noise/'
ID <- '3'
# search radius
tomatoR <- 31 # Selon juliette, mettre plutot un peu plus que 30 (triche)
# persistence threshold
tomatoThresh <- 8
for (i in 0:29) {
data <- read.csv(paste(folder_name, 'simulated_SMLM_', ID, '_', i, '.csv', sep = ""))
detectionList <- data
#data.xy <- subset(data, select=c("V1", "V2"))
coords <- as.matrix(detectionList[, c('x', 'y')])
# cluster data using ToMATo
labels <- clusterTomato(coords, tomatoR, tomatoThresh)
#write.csv(labels, paste("tomato", name, ".csv", sep=""))
# Tomato result
plotClusterScatter(coords, labels)
# GT
plotClusterScatter(coords, detectionList$labels_1)
numClustersTom <- sum(unique(labels) > 0)
numClustersGT <- sum(unique(detectionList$labels_1) > 0)
print(paste('ToMATo found', numClustersTom, 'clusters in the dataset. The ground truth number is', numClustersGT))
tomatoDiag <- tomatoDiagram(coords, tomatoR)
plotTomatoDiagram(tomatoDiag, tomatoThresh)
filename <- paste("tomato_results/tomato_result_", ID, "_", i , ".csv", sep = "")
write.csv(labels, filename)
}
library(RSMLM)
setwd('/Users/Eliana/Documents/PDM/Codes/My_codes/Data')
folder_name <- 'different_densities/'
ID <- '4'
library(RSMLM)
setwd('/Users/Eliana/Documents/PDM/Codes/My_codes/Data')
folder_name <- 'different_densities/'
ID <- '4'
# search radius
tomatoR <- 31 # Selon juliette, mettre plutot un peu plus que 30 (triche)
# persistence threshold
tomatoThresh <- 6
for (i in 0:29) {
data <- read.csv(paste(folder_name, 'simulated_SMLM_', ID, '_', i, '.csv', sep = ""))
detectionList <- data
#data.xy <- subset(data, select=c("V1", "V2"))
coords <- as.matrix(detectionList[, c('x', 'y')])
# cluster data using ToMATo
labels <- clusterTomato(coords, tomatoR, tomatoThresh)
#write.csv(labels, paste("tomato", name, ".csv", sep=""))
# Tomato result
plotClusterScatter(coords, labels)
# GT
plotClusterScatter(coords, detectionList$labels_1)
numClustersTom <- sum(unique(labels) > 0)
numClustersGT <- sum(unique(detectionList$labels_1) > 0)
print(paste('ToMATo found', numClustersTom, 'clusters in the dataset. The ground truth number is', numClustersGT))
tomatoDiag <- tomatoDiagram(coords, tomatoR)
plotTomatoDiagram(tomatoDiag, tomatoThresh)
filename <- paste("tomato_results/tomato_result_", ID, "_", i , ".csv", sep = "")
write.csv(labels, filename)
}
